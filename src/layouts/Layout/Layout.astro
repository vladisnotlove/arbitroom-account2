---
// global styles
import "styles/reset.scss";
import "styles/fonts.scss";
import "styles/global.scss";
// other imports
import Header from "components/@common/Header/Header.astro";
import Loader from "components/@common/Loader/Loader.astro";
import LangaugeMenu from "components/@common/LanguageMenu/LangaugeMenu.astro";
import Notifications from "components/@common/Notifications/Notifications.astro";
import SideMenu, { Props as SideMenuProps } from "components/@common/SideMenu/SideMenu.astro";
import MediaViewer from "components/@common/MediaViewer/MediaViewer.astro";
import "./Layout.scss";

export interface Props {
	variant?: "default" | "langing";
	title: string;
	selectedMenuItem?: SideMenuProps["selected"];
	withMediaViewer?: boolean;
	withChartJs?: boolean;
}

const { variant = "default", title, selectedMenuItem, withMediaViewer, withChartJs } = Astro.props;
---

<!doctype html>
<html lang="ru-RU">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1" />
		<title>{title} | Arbitroom</title>
		<link rel="apple-touch-icon" sizes="180x180" href={"/apple-touch-icon.png"} />
		<link rel="icon" type="image/png" sizes="32x32" href={"/favicon-32x32.png"} />
		<link rel="icon" type="image/png" sizes="16x16" href={"/favicon-16x16.png"} />
		<link rel="manifest" href="/site.webmanifest" />
		{
			withChartJs && (
				<script
					is:inline
					src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.umd.js"
					integrity="sha512-6HrPqAvK+lZElIZ4mZ64fyxIBTsaX5zAFZg2V/2WT+iKPrFzTzvx6QAsLW2OaLwobhMYBog/+bvmIEEGXi0p1w=="
					crossorigin="anonymous"
					referrerpolicy="no-referrer"
				/>
			)
		}
	</head>
	<body>
		<!-- LOADER -->
		<Loader />

		<!-- POPPERS -->
		<LangaugeMenu />
		<Notifications />

		<!-- MODALS -->
		{Astro.slots.has("modals") && <slot name="modals" />}

		<!-- MEDIA VIEWER -->
		{
			withMediaViewer && (
				<>
					<MediaViewer />
				</>
			)
		}

		<!-- MAIN -->
		{
			variant === "default" && (
				<div class="container">
					<SideMenu selected={selectedMenuItem} />
					<div class="main">
						<Header title={{ type: "title", text: title }} />
						<div class="content">
							<slot />
						</div>
					</div>
				</div>
			)
		}
		{
			variant === "langing" && (
				<div class="container">
					<div class="main">
						<Header title={{ type: "logo" }} noBurger />
						<div class="content">
							<slot />
						</div>
					</div>
				</div>
			)
		}
	</body>
</html>
